#!/usr/bin/env luajit

local R = require 're'
local J = require 'cjson'

local format = {
	ampm = 'p',
	daylong = 'd',
	dayshort = 'd',
	epoch = 's',
	hour12long = 'I',
	hour12short = 'I',
	hour24long = 'H',
	hour24short = 'H',
	minute = 'M',
	monthlong = 'm',
	monthnamelong = 'B',
	monthnameshort = 'b',
	monthshort = 'm',
	newline = 'n',
	second = 'S',
	tab = 't',
	timezone = 'Z',
	weekday = 'u',
	weekdaynamelong = 'A',
	weekdaynameshort = 'a',
	yearlong = 'Y',
	yearshort = 'y',
}

local wipe_zero = {
	dayshort = true,
	hour12short = true,
	hour24short = true,
	monthshort = true,
}

local patterns, i = {}, 0
for k, _ in pairs(format) do
	i = i + 1
	patterns[i] = "'" .. string.lower(k) .. "'"
end

table.sort(patterns, function (a,b) return (a > b) end)

patterns = R.compile([[ {|
	KWS <- KW KWS / {}
	KW  <- {} { ]] .. table.concat(patterns, '/') .. [[ } / . KW
|} ]])

local input = table.concat(arg, ' ')
local matched = patterns:match(string.lower(input))
local fmt = ''

if not matched then
	fmt = input
else 
	local cur, i = 1, 1
	while i < #matched do
		fmt = fmt .. input:sub(cur, matched[i] - 1) .. '%' .. format[matched[i+1]]
		cur = matched[i] + #matched[i+1]
		i = i + 2
	end

	if (matched[i] - 1 < #input) then
		fmt = fmt .. input:sub(matched[i])
	end
end

while true do
	local d = io.read()
	if d == nil then break end
	print(os.date(fmt, os.time{
		year = 0 + d:sub(1, 4),
		month = 0 + d:sub(6, 7),
		day = 0 + d:sub(9, 10),
	}))
end

